apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-deploy.fullname" . }}
  labels:
    {{- include "app-deploy.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{ end }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      {{- if lt .Values.replicaCount 2.0 }}
      maxUnavailable: 0
      {{ else }}
      maxUnavailable: 1
      {{ end }}
  selector:
    matchLabels:
      {{- include "app-deploy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app-deploy.selectorLabels" . | nindent 8 }}
        {{- include "app-deploy.labels" . | nindent 8 }}
      {{- with .Values.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
        checksum/configmap: {{ join "" .Values.appExtConfig | sha256sum | trunc 63 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "app-deploy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          # image: "{{ .Values.image.repository }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.railsSidekiq.enabled }}
          env:
          - name: SIDEKIQ_ENABLED
            value: "true"
          {{ end }}
          envFrom:
            - secretRef:
                name: app-secrets
            - configMapRef:
                name: app-deploy-extd-config
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: {{ .Values.probes.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
            initialDelaySeconds: {{ .Values.probes.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readinessProbe.periodSeconds }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
